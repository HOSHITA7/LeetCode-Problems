class Solution {

    int m, n;  

    boolean b;  

    public void Sub(int[][] grid1, int[][] grid2, int i, int j) {
        
        if (i < 0 || i == m || j < 0 || j == n || grid2[i][j] == 0) return;

        if (grid1[i][j] != grid2[i][j]) b = false;

        grid2[i][j] = 0;

        Sub(grid1, grid2, i + 1, j); Sub(grid1, grid2, i - 1, j);  

        Sub(grid1, grid2, i, j + 1); Sub(grid1, grid2, i, j - 1);  
    }

    public int countSubIslands(int[][] grid1, int[][] grid2) {

        m = grid1.length; n = grid1[0].length; 

        int c = 0; 

        for (int i = 0; i < m; i++) {

            for (int j = 0; j < n; j++) {
                
                if (grid2[i][j] == 1) {

                    b = true; 

                    Sub(grid1, grid2, i, j);  

                    if (b) c++; 
                }
            }
        }

        return c;
    } 
}
